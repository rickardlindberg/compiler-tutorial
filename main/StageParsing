main.StageParsing

![Parsing.]($ROOT/static/images/stage-parsing.png)

The first transformation in a compiler is often parsing. Working with raw text
is difficult, so we convert it to a ParseTree which is easier to work with.

## Parsing methods

* different parsing methods

ParsecIntroduction

## Data structure for parse tree

We define the parse tree data structure like this:

    data Program = Program [Let]

    data Let     = Let String Term

    data Term    = Identifier String
                 | Number     Integer
                 | Lambda     [String] [Term]

Example program:

    let ANSWER = 14

    let main = \() ->
        printAnswer exit

    let printAnswer = \(k) ->
        print ANSWER k

Parse tree:

![Parse tree.]($ROOT/static/images/con-parse-tree.png)

## Continue

ExecutionModel
