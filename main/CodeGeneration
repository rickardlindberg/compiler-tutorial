main.CodeGeneration

![Code generation.]($ROOT/static/images/stage-code-gen.png)

Now it's time to generate C code from the parse tree. The generated code will
use the RuntimeSupport library.

Generating code in Haskell means generating a string that contains C code and
then writing it to a file. In CodeGenerationFramework we make a small framework
that allows us to generate that string in a more elegant way.

There are two things we need to generate: first the main function `con_main`,
and then one C function per con function.

The easiest way to get a feeling for how these two things should look like is
to compile a [test
program](https://github.com/rickardlindberg/compiler-tutorial/blob/master/scale.con)
using the reference implementation and then look at the generated code. If the
[compile](https://github.com/rickardlindberg/compiler-tutorial/blob/master/src/compile.sh)
script is used, the generated file is located in `sketch/con_program.cpp`.

## Generating the main function

The main function should create the global environment and start calling the
main function.

## Generating code for a function

TODO:

## Continue

AssembleHex
